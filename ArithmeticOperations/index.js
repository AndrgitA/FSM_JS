/**
 * Лабораторная работа №5
 * Тема "Построение транслятора" (продолжение лабораторной работы №4)
 * Для конкретной задачи обработки текстовой строки записать КС грамматику.
 * Для этой КС грамматики необходимо реализовать транслятор.
 * (40 баллов)
 * Список задач обработки текста.
 * 3. Вычисление арифметических выражений.
 */


 /**
  * Описание контекстно-свобоной грамматики для
  * вычисления математического выражения с числами
  * 
  * L(1) грамматика где
  * 
  * Терминалы                     { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, +, -, ^, *, /, %, (, ) }
  * Нетерминалы                   { E, T, X, Y, C }
  * 
  * Начальный нетерминал всегда E
  * 
  * Продукци                      Символы, с которых в поисковой строке начинается разложение из "Нетерминала"  
  * E -> TX                       { 0 - 9, ( }
  * 
  * X -> +TX                      { + }                   
  * X -> -TX                      { - }
  * X -> EPS                      { def }
  * 
  * T -> FY                       { 0 - 9, ( }
  * Y -> ^FY                      { ^ }
  * Y -> /FY                      { / }
  * Y -> *FY                      { * }
  * Y -> %FY                      { % }
  * Y -> EPS                      { def }
  * 
  * F -> C                        { 0 - 9 }
  * F -> (E)                      { ( }
  * 
  * C -> 0|1|2|3|4|5|6|7|8|9      
  */
const AccemblerArithmetic = require('../modules/ArithmeticOperations/index.js');
function main() {
  const strs = [
    "1 /3+ 2 ",
    "1 / (3+2)",
    "1 + (33 * 20 / 5)",
    "-1 + (33 * 20 / 5)",
    "5 % 3",
    "2^(-2)",
    "2^2",
    "2^2^3",
    "2+c"
  ];

  const accembler = new AccemblerArithmetic();

  strs.forEach((str) => {
    const result = accembler.run(str);

    console.log("ACCEMBLER WORK RESULT: \"" + result + "\"");
  });
}

main();